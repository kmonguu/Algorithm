# 끊어진 기타줄의 개수 N과 기타줄 브랜드 M개가 주어지고, 
# 각각의 브랜드에서 파는 기타줄 6개가 들어있는 패키지의 가격, 낱개로 살 때의 가격이 주어질 때, 적어도 N개를 사기 위해 필요한 최소 금액을 출력

# 예제 : n과 m이 각각 10, 3으로 주어졌을 때, 패키지와 낱개 가격이 주어진다. 이때 구할 수 있는 최소 금액은 36이다.
# 10 3
# 20 8
# 40 7
# 60 4

# 내가 푼 코드
# 패키지 가격과 낱개가격을 입력받아 패키지 가격, 낱개가격을 따로 묶어주었다.
# 패키지 배열 안에는 패키지 가격 뿐아니라 낱개 가격을 *6을 한 금액도 넣어준다. 패키지 가격보다 낱개 6개 가격이 더 적은 경우를 위해서이다.
# 필요한 줄의 개수 n에 나누기 연산을 하여 각각 경우에 따라 최소 금액을 출력해주면 된다.

# n = 15  m = 1
# 100  40 인 경우 
# (15 // 6) = 2, (15 % 6) = 3 이 나오는데, 여기서 줄 개수에 딱 맞춰 구매하는 방법 (100 * 2) + (40 * 3) = 320 보다
# 필요한 줄 갯수가 넘더라도 최소 금액을 구하면 되므로 (15 / 6)을 올림한 값으로 (100 * 3) = 300 처럼 구매할 수 있다.

import math
import sys
input = sys.stdin.readline

n, m = map(int,input().split())

package, one = [],[]

for _ in range(m):
  p, o = map(int, input().split())

  package.append(p)
  package.append(o*6)
  one.append(o)

print(min(min(package) * math.ceil(n/6),  min(package) * (n // 6) +  min(one) * (n % 6)))
