# 가로 길이가 W, 세로 길이가 H인 직사각형 종이가 있을 때, 이 종이의 격자 칸은 1x1의 크기로 이뤄져있다.
# 누군가 이 종이를 대각선 꼭지점 2개를 잇는 방향으로 잘라놓아 직사각형 종이는 크기가 같은 직각 삼각형 2개로 나누어진 상태이다.
# 이때 나누어진 종이에서 사용할 수 있는 정사각형의 개수를 반환

# 예시
# 가로 8, 세로 12인 직사각형을 대각선 방향으로 자르면 총 16개의 정사각형을 사용할 수 없게 된다.
# 원래 직사각형에서는 96개의 정사각형을 만들 수 있었으므로, 96-16 = 80 개의 정사각형이 반환된다.


# 틀린 코드
# 접근 방법 : 예시에 나온 8*12 사각형에서 대각선을 따라 못쓰는 사각형 4개가 4번 반복되는 것을 이용하여 8과 12의 최대공약수 4의 제곱값을 8*12에서 뺌

def gcd(w, h):          # 유클리드 호제법을 이용한 최대공약수 구하는 함수
    while(h):
        w, h = h, w%h
    return (w)

def solution(w,h):
    return (w*h) - (gcd(w, h)**2)
  
  
# 답안

# <맞는 접근 방법>
# 8*12의 전체 사각형에서 대각선은 (2.3) 지점에서 만난다. 
# 2*3 사각형을 봤을 때, 못쓰는 사각형은 4개가 되는 것을 알 수 있고 이는 2+3(가로+세로)값의 -1을 한 값인 것을 알 수 있다.
# 다시 8*12 사각형을 봤을 때 2*3의 사각형은 총 4번이 나오고 이는 8과 12의 최대공약수가 된다.
# 위의 과정으로 못쓰는 사각형을 구하는 식은 가로 + 세로 - 최대공약수가 되는 것을 알 수 있다.
# 문제에서는 쓸 수 있는 멀쩡한 사각형을 구하는 문제이므로 가로*세로 값에서 못쓰는 사각형을 뺀 값을 반환하면 된다.

def gcd(w, h):
    while(h):
        w, h = h, w%h
    return (w)

def solution(w,h):
    return ((w*h) - (w+h - gcd(w, h)))
