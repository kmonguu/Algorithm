# 달팽이가 높이가 V미터인 나무 막대를 올라갈 때 낮 동안 A미터를 올라갈 수 있지만 밤이 되면 B미터 미끄러진다.
# 하지만 정상에 올라간 후엔 더이상 미끄러지지 않는다고 할 때 달팽이가 나무 막대를 모두 올라가려면 며칠 걸리는지 출력
# 달팽이가 V까지 올라가는 과정을 식으로 만들게 되면 (A-B)*day + A = V가 된다. 마지막 +A는 정상까지 올라가면 더이상 미끄러지지 않기 때문
# 이 식에서 day를 구하는 식으로 바꾸면 day = (V-A)/(A-B) 가 된다. 이 식을 이용하여 문제를 풀 수 있다.

import math                           # math 모듈을 사용

A, B, V = map(int, input().split())  

print(math.ceil((V-A)/(A-B)) +1)      # (V-A)/(A-B)의 결과가 소수인 경우 소수점 이하도 하루가 걸린 것이므로 math모듈의 ceil함수를 통해 
                                      # 소수를 올림하고 마지막에 + 1 더해준다.

# 처음 생각한 틀린 코드
# V에서 0까지 거꾸로 내려온다고 생각했을 때 낮 동안 움직일 거리 A만큼을 V에서 빼준다.
# 이때 V가 0보다 작거나 같다면 if문을 실행하여 반복문을 종료한다.
# V가 0보다 크다면 밤 동안 미끄러질 거리 B만큼을 더해준 뒤 day + 1하여 V가 0보다 작거나 같을 때 까지 반복
# 코드는 동작하지만 입력 값이 커지게 되면 시간초과가 발생

A, B, V = map(int, input().split())
day = 1

while True:
  V -= A
  if V <= 0:
    print(day)
    break
  V += B
  day += 1
  
  
