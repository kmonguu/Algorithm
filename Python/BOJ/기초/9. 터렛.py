# A와 B의 좌표가 각각 (x1, y1), (x2, y2)가 입력되고 목표까지의 거리를 r1, r2로 입력받는다.
# 각 테스트 케이스마다 (x1, y1, r1), (x2, y2, r2)를 입력받으면 목표물이 있을 수 있는 위치의 개수를 출력 무한대일 경우 -1
# 결국 이 문제는 (x, y)좌표를 중심으로 하는 원에서 반지름은 r이라는 의미가 된다.
# (x1, y1), (x2, y2)라는 좌표를 가진 원의 접점을 구하는 문제


# 풀이과정
# 두 원의 접점이 생길 수 있는 경우의 수는 4가지이다.
# 1. 두 원의 접점이 무수히 많은 경우 (두 원의 중심 좌표가 일치하고 반지름도 같다면 접점이 무수히 많다.)
# 2. 두 원의 접점이 0개인 경우 (두 원의 중심이 같지만 반지름이 다를 경우, 두 원이 서로 멀리 떨어져 있는 경우)
# 3. 두 원의 접점이 1개인 경우 (외접하는 경우와 내접하는 경우로 나눌 수 있다.)
# 4. 두 원의 접점이 2개인 경우 (위에서 말한 3가지 경우를 제외한 나머지 경우에 접점을 2개씩 갖는다.)


# 원의 중심이 같은 경우와 그렇지 않은 경우로 나누어 그 안에서 다시 if else문을 사용

T = int(input())
for _ in range(T):
  x1, y1, r1, x2, y2, r2 = map(int, input().split())

  distance = ((x1-x2)**2 + (y1-y2)**2)**0.5                                 # distance = 두 원의 중점 사이의 거리

  if x1 == x2 and y1 == y2:                                                 # 두 원의 중심 좌표가 같은 경우                         
    if r1 == r2:                                                            # 두 원이 반지름이 같다면 접점이 무수히 많아지므로
      print(-1)                                                             # -1 출력
    else:                                                                   # 반지름이 서로 같지 않다면   
      print(0)                                                              # 중심 좌표는 같고 반지름이 다르다면 하나의 원이 다른 원을 내포하고 있으므로 접점이 없다.

  else:                                                                     # 두 원의 중심 좌표가 다른 경우
    if r1 + r2 < distance or distance + r1 < r2 or distance + r2 < r1:      # distance, r1, r2 중 가장 긴 값이 나머지 두 값의 합보다 큰 경우
      print(0)                                                              # 두 원이 서로 멀리 떨어져 있거나, 한개의 원과 이 원이 내포하는 원이 접점이 없으므로 0출력 

    elif r1 + r2 == distance or abs(r1-r2) == distance:                     # 두 반지름의 합과 중점 사이의 거리가 같을 때(외접), 두 반지름의 차가 중점 사이의 거리와 같을 때(내접)
      print(1)                                                              # 접점은 1개 이므로 1출력

    else:                                                                   # 위의 경우를 제외한 나머지 경우
      print(2)                                                              # 접점을 2개씩 갖는다.
      
      
